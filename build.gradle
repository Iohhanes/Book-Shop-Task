plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    id 'idea'
}

group = 'com.academia'
version = '0.0.1'

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

ext {
    lombokVersion = '1.18.24'
    mapstructVersion = '1.5.1.Final'
    lombokMapstructBindingVersion = '0.2.0'
    postgresSQLVersion = '42.3.6'
    flywayVersion = '8.5.12'
    springCloudVersion = '2021.0.3'
    springCloudGcpVersion = '3.3.0'
    springDocVersion = '1.6.9'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation "com.google.cloud:spring-cloud-gcp-starter-storage:${springCloudGcpVersion}"
    implementation "org.postgresql:postgresql:${postgresSQLVersion}"
    implementation "org.flywaydb:flyway-core:${flywayVersion}"

    //swagger
    implementation "org.springdoc:springdoc-openapi-ui:${springDocVersion}"
    implementation "org.springdoc:springdoc-openapi-data-rest:${springDocVersion}"
    //implementation "org.springdoc:springdoc-openapi-security:${springDocVersion}"

    //mapstruct
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"

    //lombok
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"

    //lombok-mapstruct
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
    implementation "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

bootJar {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

test {
    useJUnitPlatform()
}
