plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    id 'idea'
}

group = 'com.academia'
version = '0.0.1'

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

ext {
    lombokVersion = '1.18.20'
    mapstructVersion = '1.4.2.Final'
    lombokMapstructBindingVersion = '0.2.0'
    postgresSQLVersion = '42.2.23'
    flywayVersion = '7.12.0'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.postgresql:postgresql:${postgresSQLVersion}"
    implementation "org.flywaydb:flyway-core:${flywayVersion}"

    //mapstruct
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"

    //lombok
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"

    //lombok-mapstruct
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
    implementation "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

bootJar {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

test {
    useJUnitPlatform()
}
